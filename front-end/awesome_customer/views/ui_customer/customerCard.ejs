<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head'); %>
</head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.3.4/vue.js"></script>
<script src="https://unpkg.com/vue-router"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<body>

  <header>
    <%- include('partials_customer/header'); %>
  </header>

  <main id="main">
    <form @submit.prevent="createBid">
      <div class="container">
        <div class="row">
          <div class="col">
            <div class="card border-success mb-3">
              <div class="card-header">
                <h5 style="margin-top:10px;color:green;text-align:center;">
                  {{bid.auctionID}}
                </h5>
              </div>
              <div class="card-body">
                <div v-if="auctionSafe.auctionType === 'english'">
                  <h5 class="card-title" style="color:green;">English Auction</h5>
                </div>
                <div v-else-if="auctionSafe.auctionType === 'dutch'">
                  <h5 class="card-title" style="color:orange;">Dutch Auction</h5>
                </div>
                <div v-else-if="auctionSafe.auctionType === 'fpsb'">
                  <h5 class="card-title" style="color:green;">First Priced Sealed Bid Auction</h5>
                </div>
                <div v-else-if="auctionSafe.auctionType === 'spsb'">
                  <h5 class="card-title" style="color:green;">Second Priced Sealed Bid Auction</h5>
                </div>
                <h6 class="card-subtitle mb-2 text-muted" style="color:green;">Commodity type: {{auctionSafe.service.docType}}</h6>
                <h6 class="card-subtitle mb-2 text-muted" style="color:green;">Auction owner: {{result.owner}}</h6>
                <div class="properties">
                  <h5 style="color: green;">Service Properties</h5>
                  <ul class="list-group list-group-flush" style="margin-top: 10px;">
                    <div v-for="property in auctionSafe.service.properties">
                      <li class="list-group-item"><b>{{property.commodityKey}}: </b>{{property.commodityValue}}</li>
                    </div>
                  </ul>
                </div>
                <div class="rules">
                  <h5 style="color: green;">SLA rules</h5>
                  <ul class="list-group list-group-flush" style="margin-top: 10px;">
                    <div v-for="rule in auctionSafe.service.rules">
                      <li class="list-group-item"><b>{{rule.ruleString}}: </b>{{rule.ruleFine}} {{getCurrency(rule.currency)}}</li>
                    </div>
                  </ul>
                </div>
                <div class="pricing">
                  <h5 style="color: green;">Auction Pricing</h5>
                  <ul class="list-group list-group-flush" style="margin-top: 10px;">
                    <li class="list-group-item"><b>Pricing subscription:</b> {{getSubscription(auctionSafe.pricing.pricingSubscription)}}</li>
                    <div v-if="auctionSafe.pricing.startPrice">
                      <li class="list-group-item"><b>Start Price:</b> {{auctionSafe.pricing.startPrice}} {{getCurrency(auctionSafe.pricing.pricingCurrency)}} </li>
                    </div>
                    <div v-if="auctionSafe.pricing.pricingReserve">
                      <li class="list-group-item"><b>Service Reserve price:</b> {{auctionSafe.pricing.pricingReserve}} {{getCurrency(auctionSafe.pricing.pricingCurrency)}} </li>
                    </div>
                    <div v-if="auctionSafe.pricing.biddingStep">
                      <li class="list-group-item"><b>Bidding step:</b> {{auctionSafe.pricing.biddingStep}} {{getCurrency(auctionSafe.pricing.pricingCurrency)}} </li>
                    </div>
                  </ul>
                </div>
              </div>
            </div>
          </div>
          <div class="col">
            <div class="card border-success mb-3">
              <div class="card-header overflow-auto">
                <h5 style="margin-top:10px;color:green;text-align:center;">
                  Auction Bids
                </h5>
              </div>
              <div class="card-body">
                <div v-if="bids[0]==='hidden'">
                  BIDS ARE HIDDEN
                </div>
                <div v-else>
                  <div v-if="bids.length">
                    <ul class="list-group list-group-flush" style="margin-top: 10px;">
                      <div class="bids" v-for="bid in bids">
                        <li class="list-group-item border-bottom"><b>{{bid.owner}}: </b>{{bid.pricing.bidAmount}} {{getCurrency(bid.pricing.pricingCurrency)}}</li>
                      </div>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="card border-success mb-3">
          <div class="form-group" id="pricing" style="margin-left:20px; margin-top:10px;">
            <h5>Bid</h5>
            <h6>Submit your bid amount for the service:</h6>
            <div class="row" style="padding: 10px;">
              <div class="col-10">
                <div class="input-group">
                  <input type="number" class="form-control" v-model="bid.pricing.bidAmount" :min='minimumPrice()'>
                  <div class="input-group-append">
                    <select class="form-control" id="pricing" v-model="bid.pricing.pricingSubscription" disabled>
                      <option name="flatFee" value="flatFee">Flat Fee</option>
                      <option name="perHour" value="perHour">Per Hour</option>
                      <option name="perMonth" value="perMonth">Per Month</option>
                      <option name="perYear" value="perYear">Per Year</option>
                    </select>
                  </div>
                  <div class="input-group-append">
                    <select class="form-control" id="pricing" v-model="bid.pricing.pricingCurrency" disabled>
                      <option name="euro" value="euro">€</option>
                      <option name="yuan" value="yuan">元</option>
                      <option name="kuna" value="kuna">Kuna</option>
                      <option name="dollar" value="dollar">$</option>
                      <option name="btc" value="btc">฿</option>
                      <option name="eth" value="eth">ETH</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <hr style="color:green; border: 2px solid">
        <div class="card border-success mb-3">
          <div class="card-body">
            <button name="submit" type="submit" class="btn btn-outline-dark">Submit Bid</button>
          </div>
        </div>

        <div class="makeAuctionTemplate">
          Auction Safe <br>
          {{auctionSafe}}
        </div>

        <div class="makeAuctionTemplate">
          Bid <br>
          {{bid}}
        </div>
    </form>
  </main>

  <footer>
    <%- include('../partials/footer'); %>
  </footer>

  <script type="text/javascript">
    var router = new VueRouter({
      mode: 'history',
      routes: []
    });
    window.app = new Vue({
      router,
      el: '#main',
      data() {
        return {
          result: {},
          bids: [],
          auction: {},
          service: {
            docType: '',
            properties: [],
            rules: [],
            pricing: {
              pricingCurrency: '',
              pricingSubscription: ''
            }
          },
          auctionSafe: {
            pricing: {},
            service: {}
          },
          bid: {
            auctionID: '',
            pricing: {
              bidAmount: '',
              pricingCurrency: '',
              pricingSubscription: ''
            }
          }
        }
      },
      methods: {
        async parser(result) {
          console.log(result);
          this.auction = JSON.parse(result.auctionInfo);
          this.auctionSafe = JSON.parse(JSON.stringify(this.auction));
          this.service = this.auctionSafe.service;
          this.bid.pricing.pricingCurrency = this.auctionSafe.pricing.pricingCurrency;
          this.bid.pricing.pricingSubscription = this.auctionSafe.pricing.pricingSubscription;
          if (this.result.bids[0] == "hidden") {
            //console.log("hereee");
            this.bids = ["hidden"];
          } else {
            for (var i = 0; i < this.result.bids.length; i++) {
              bidObject = JSON.parse(this.result.bids[i].bid);
              bidObject.owner = this.result.bids[i].customerID;
              this.bids.push(
                bidObject
              );
            }
          //  this.bids.reverse();
            this.bids.sort(function(a, b) {
              return parseFloat(b.pricing.bidAmount) - parseFloat(a.pricing.bidAmount);
            });
          }
        },
        createBid() {
          //console.log("here");
          axios.post('/ui_customer/postFullBid', this.bid)
            .then(function(response) {
              console.log(response);
              if (response.data.redirect == '/ui_customer/postAuctionThankYou') {
                window.location = "/ui_customer/postAuctionThankYou"
              } else if (response.data.redirect == '/ui_customer/postAuctionThankYou') {
                window.location = "/ui_customer/postAuctionThankYou"
              }
              //a catch or something was here
            })
            .catch(function(error) {
              window.location = "/ui_customer/postAuctionThankYou"
            })
        },
        minimumPrice() {
          if (this.auctionSafe.auctionType == 'english') {
            if (this.bids.length > 0) {
              minimumPrice = parseInt(this.bids[0].pricing.bidAmount) + parseInt(this.auctionSafe.pricing.biddingStep);
              console.log(minimumPrice);
              return minimumPrice;
            } else {
              return this.auctionSafe.pricing.startPrice;
            }
          } else if (this.auctionSafe.auctionType == 'dutch') {
            return 0;
          } else if (this.auctionSafe.auctionType == 'fpsb') {
            return this.auctionSafe.pricing.pricingReserve;
          } else if (this.auctionSafe.auctionType == 'spsb') {
            return this.auctionSafe.pricing.pricingReserve;
          } else {
            return 0;
          }
        },
        getCurrency(currency) {
          if (currency == "euro") {
            return "€";
          } else if (currency == "yuan") {
            return "€";
          } else if (currency == "kuna") {
            return "Kuna";
          } else if (currency == "dollar") {
            return "$";
          } else if (currency == "btc") {
            return "฿";
          } else if (currency == "eth") {
            return "ETH";
          } else {
            return "€";
          }
        },
        getSubscription(subscription) {
          if (subscription == "flatFee") {
            return "Flat fee";
          } else if (subscription == "perHour") {
            return "Per Hour";
          } else if (subscription == "perMonth") {
            return "Per Month";
          } else if (subscription == "perYear") {
            return "Per Year";
          } else {
            return "Flat Fee";
          }
        }
      },
      async created() {
        q = this.$route.query;
        console.log(q.serviceID);
        this.bid.auctionID = q.serviceID;
        const res = await axios.get("/ui_customer/cCard" + q.serviceID);
        this.result = res.data;
        console.log(res.data);
        this.parser(this.result);
      }
    });
  </script>

</body>

</html>
